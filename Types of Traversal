class Node{
	int item;
	Node left,right;
	public Node(int key){
		item=key;
		left=right=null;
	}
}
class TreeTra{
	Node root;
	TreeTra(){
		root=null;
	}
	void PostOrder(Node node){
		if(node==null){
			return;
		}
		PostOrder(node.left);
		PostOrder(node.right);
		System.out.print(node.item+"->");
	}
	void InOrder(Node node){
		if(node==null){
			return;
		}
		InOrder(node.left);
		System.out.print(node.item+"->");
		InOrder(node.right);
	}
	void PreOrder(Node node){
		if(node==null){
			return;
		}
		PostOrder(node.left);
		PostOrder(node.right);
		System.out.print(node.item+"->");
	}
	public static void main(String args[]){
			TreeTra tree=new TreeTra();
			tree.root=new Node(1);
			tree.root.left=new Node(12);
			tree.root.right=new Node(9);
			tree.root.left.left=new Node(5);
			tree.root.left.right=new Node(6);

			System.out.println("InOrder Traversal ");
			tree.InOrder(tree.root);

			System.out.println("\nPreOrder Traversal");
			tree.PreOrder(tree.root);

			System.out.println("\nPostOrder Traversal");
			tree.PostOrder(tree.root);
	}
}
